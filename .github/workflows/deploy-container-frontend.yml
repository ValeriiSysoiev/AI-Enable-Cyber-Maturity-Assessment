name: Deploy Frontend to Azure Container Apps

on:
  push:
    branches:
      - main
    paths:
      - 'src/frontend/**'
      - '.github/workflows/deploy-container-frontend.yml'
  workflow_dispatch:

env:
  AZURE_CONTAINER_APP_NAME: frontend-aiagents-gov
  AZURE_RESOURCE_GROUP: rg-info-2259
  AZURE_LOCATION: westeurope
  DOCKERFILE_PATH: src/frontend/Dockerfile
  REGISTRY_LOGIN_SERVER: somcregistry.azurecr.io
  IMAGE_NAME: frontend-aiagents-gov

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name somcregistry

      - name: Build and push Docker image
        run: |
          cd src/frontend
          docker build -t ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -f Dockerfile .
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy to Azure Container Apps
        run: |
          # Use existing Container Apps environment
          ENVIRONMENT_NAME="managedEnvironment-rginfo2259-8048"
          
          # Get backend Container App URL for API configuration
          BACKEND_FQDN=$(az containerapp show --name backend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv 2>/dev/null || echo "")
          if [ -z "$BACKEND_FQDN" ]; then
            echo "Warning: Backend Container App not found. Using localhost fallback."
            BACKEND_URL="http://localhost:8000"
          else
            BACKEND_URL="https://$BACKEND_FQDN"
          fi
          echo "Using backend URL: $BACKEND_URL"
          
          # Check if Container App exists
          if az containerapp show --name ${{ env.AZURE_CONTAINER_APP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} > /dev/null 2>&1; then
            echo "Container App exists, updating..."
            # Update Container App
            az containerapp update \
              --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
              --set-env-vars \
                PORT=3000 \
                BACKEND_API_URL=$BACKEND_URL \
                AUTH_ENABLED=false
          else
            echo "Container App does not exist, creating..."
            # Create Container App
            az containerapp create \
              --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --environment $ENVIRONMENT_NAME \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
              --target-port 3000 \
              --ingress external \
              --min-replicas 1 \
              --max-replicas 3 \
              --cpu 0.5 \
              --memory 1.0Gi \
              --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
              --env-vars \
                PORT=3000 \
                BACKEND_API_URL=$BACKEND_URL \
                AUTH_ENABLED=false
          fi
          
          # Get the FQDN of the Container App
          FQDN=$(az containerapp show --name ${{ env.AZURE_CONTAINER_APP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
          echo "Frontend Container App deployed successfully!"
          echo "URL: https://$FQDN"
          
          # Update backend with frontend URL
          if az containerapp show --name backend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} > /dev/null 2>&1; then
            echo "Updating backend with frontend URL..."
            az containerapp update \
              --name backend-aiagents-gov \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --set-env-vars \
                FRONTEND_SITE_NAME=https://$FQDN
          fi
