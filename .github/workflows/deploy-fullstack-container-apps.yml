name: Deploy Full Stack (Backend + Frontend) to Azure Container Apps

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: rg-info-2259
  AZURE_LOCATION: westeurope
  REGISTRY_LOGIN_SERVER: ca2a76f03945acr.azurecr.io
  ENVIRONMENT_NAME: managedEnvironment-rginfo2259-8048

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    outputs:
      backend-url: ${{ steps.get-backend-url.outputs.backend-url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ca2a76f03945acr

      - name: Build and push Backend Docker image
        run: |
          docker build -t ${{ env.REGISTRY_LOGIN_SERVER }}/backend-aiagents-gov:${{ github.sha }} -f src/backend/Dockerfile.azure .
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/backend-aiagents-gov:${{ github.sha }}

      - name: Deploy Backend to Azure Container Apps
        run: |
          # Check if Container App exists
          if az containerapp show --name backend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} > /dev/null 2>&1; then
            echo "Backend Container App exists, updating..."
            az containerapp update \
              --name backend-aiagents-gov \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/backend-aiagents-gov:${{ github.sha }} \
              --set-env-vars \
                PORT=8000 \
                AZURE_OPENAI_ENDPOINT=https://somc-ai-autogen.openai.azure.com/ \
                AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o \
                AZURE_OPENAI_API_VERSION=2024-08-01-preview \
                AZURE_AI_SUBSCRIPTION_ID=05cc117e-29ea-49f3-9428-c5d042340a91 \
                AZURE_AI_RESOURCE_GROUP=rg-info-2259 \
                AZURE_AI_PROJECT_NAME=ai-project-default \
                AZURE_AI_AGENT_ENDPOINT=https://somc-ai-autogen.openai.azure.com/ \
                BACKEND_API_URL=http://localhost:8000 \
                FRONTEND_SITE_NAME=https://frontend-aiagents-gov.westeurope.azurecontainerapps.io
          else
            echo "Backend Container App does not exist, creating..."
            az containerapp create \
              --name backend-aiagents-gov \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --environment ${{ env.ENVIRONMENT_NAME }} \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/backend-aiagents-gov:${{ github.sha }} \
              --target-port 8000 \
              --ingress external \
              --min-replicas 1 \
              --max-replicas 3 \
              --cpu 1.0 \
              --memory 2.0Gi \
              --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
              --env-vars \
                PORT=8000 \
                AZURE_OPENAI_ENDPOINT=https://somc-ai-autogen.openai.azure.com/ \
                AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4o \
                AZURE_OPENAI_API_VERSION=2024-08-01-preview \
                AZURE_AI_SUBSCRIPTION_ID=05cc117e-29ea-49f3-9428-c5d042340a91 \
                AZURE_AI_RESOURCE_GROUP=rg-info-2259 \
                AZURE_AI_PROJECT_NAME=ai-project-default \
                AZURE_AI_AGENT_ENDPOINT=https://somc-ai-autogen.openai.azure.com/ \
                BACKEND_API_URL=http://localhost:8000 \
                FRONTEND_SITE_NAME=https://frontend-aiagents-gov.westeurope.azurecontainerapps.io
          fi
          
      - name: Get Backend URL
        id: get-backend-url
        run: |
          BACKEND_FQDN=$(az containerapp show --name backend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
          BACKEND_URL="https://$BACKEND_FQDN"
          echo "backend-url=$BACKEND_URL" >> $GITHUB_OUTPUT
          echo "Backend deployed at: $BACKEND_URL"

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name ca2a76f03945acr

      - name: Build and push Frontend Docker image
        run: |
          cd src/frontend
          docker build -t ${{ env.REGISTRY_LOGIN_SERVER }}/frontend-aiagents-gov:${{ github.sha }} -f Dockerfile .
          docker push ${{ env.REGISTRY_LOGIN_SERVER }}/frontend-aiagents-gov:${{ github.sha }}

      - name: Deploy Frontend to Azure Container Apps
        run: |
          BACKEND_URL="${{ needs.deploy-backend.outputs.backend-url }}"
          echo "Using backend URL: $BACKEND_URL"
          
          # Check if Container App exists
          if az containerapp show --name frontend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} > /dev/null 2>&1; then
            echo "Frontend Container App exists, updating..."
            az containerapp update \
              --name frontend-aiagents-gov \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/frontend-aiagents-gov:${{ github.sha }} \
              --set-env-vars \
                PORT=3000 \
                BACKEND_API_URL=$BACKEND_URL \
                AUTH_ENABLED=false
          else
            echo "Frontend Container App does not exist, creating..."
            az containerapp create \
              --name frontend-aiagents-gov \
              --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
              --environment ${{ env.ENVIRONMENT_NAME }} \
              --image ${{ env.REGISTRY_LOGIN_SERVER }}/frontend-aiagents-gov:${{ github.sha }} \
              --target-port 3000 \
              --ingress external \
              --min-replicas 1 \
              --max-replicas 3 \
              --cpu 0.5 \
              --memory 1.0Gi \
              --registry-server ${{ env.REGISTRY_LOGIN_SERVER }} \
              --env-vars \
                PORT=3000 \
                BACKEND_API_URL=$BACKEND_URL \
                AUTH_ENABLED=false
          fi
          
      - name: Get Frontend URL and Update Backend
        run: |
          FRONTEND_FQDN=$(az containerapp show --name frontend-aiagents-gov --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
          FRONTEND_URL="https://$FRONTEND_FQDN"
          echo "Frontend deployed at: $FRONTEND_URL"
          
          # Update backend with correct frontend URL
          echo "Updating backend with frontend URL..."
          az containerapp update \
            --name backend-aiagents-gov \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --set-env-vars \
              FRONTEND_SITE_NAME=$FRONTEND_URL
              
          echo "ðŸš€ DEPLOYMENT COMPLETE!"
          echo "Frontend: $FRONTEND_URL"
          echo "Backend: ${{ needs.deploy-backend.outputs.backend-url }}"
